import{_ as i}from"./console-yl_t699w.js";import{_ as u}from"./addLibrary-m3-5pdM8.js";import{_ as r,r as o,o as d,c as k,a as n,d as s,b as a,w as h,e as p}from"./app-io1X_paZ.js";const g="/img/script.svg",m="/img/script.png",v="/img/2022.2.3/scriptDonate.png",_={},y=n("p",null,[n("strong",null,"脚本的作用"),s(": 开发者可以利用 Groovy 脚本来自定义一些逻辑,从而使得 api 更加灵活,例如对参数进行动态加密签名,放入 header,而不是直接写死")],-1),b=n("strong",null,"实现技术",-1),f={href:"https://groovy-lang.org/",target:"_blank",rel:"noopener noreferrer"},x=p('<p>看到 Groovy 不熟悉请<mark>不要慌</mark>,语法和 Java 几乎一致(Java 就是香,手动一个狗头)</p><h2 id="脚本流程图" tabindex="-1"><a class="header-anchor" href="#脚本流程图"><span>脚本流程图</span></a></h2><p><img src="'+g+'" alt="" loading="lazy"></p><h2 id="测试项目" tabindex="-1"><a class="header-anchor" href="#测试项目"><span>测试项目</span></a></h2>',4),q={href:"https://github.com/kings1990/fast-request-samples",target:"_blank",rel:"noopener noreferrer"},j=n("h2",{id:"内置变量",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#内置变量"},[n("span",null,"内置变量")])],-1),w=n("div",{class:"hint-container caution"},[n("p",{class:"hint-container-title"},"注意"),n("p",null,"开发者在自己编辑的脚本中,应该注意内置变量已被声明,而不是再去 new 一个 Request 或者 Response 对象,对象名是 request 或者 response,否则可能会造成不可预期的错误")],-1),S={href:"https://hutool.cn/",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"cn.hutool.http.HttpRequest",-1),U={id:"request",tabindex:"-1"},H={class:"header-anchor",href:"#request"},J=n("ul",null,[n("li",null,"作用: 包含了请求相关的信息,例如 url、header、body、各种参数"),n("li",null,"类型: cn.hutool.http.HttpRequest")],-1),C=n("p",null,"可以通过修改 request 值来动态调整参数",-1),N={id:"response",tabindex:"-1"},D={class:"header-anchor",href:"#response"},O=n("ul",null,[n("li",null,"作用: 包含了请求响应的信息"),n("li",null,"类型: cn.hutool.http.HttpResponse")],-1),I=n("p",null,"可以通过 response 值来获取响应的结果",-1),G={id:"rfr",tabindex:"-1"},L={class:"header-anchor",href:"#rfr"},P=n("ul",null,[n("li",null,"作用: 包含了跟插件交互相关的一些属性,用于后期定制")],-1),T={id:"rfr-projectheader",tabindex:"-1"},z={class:"header-anchor",href:"#rfr-projectheader"},A=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用: 包含了项目级别头,可以通过修改来动态往UI里面设置值
类型: java.util.LinkedHashMap<String,String>
`)])],-1),B={id:"rfr-apiheader",tabindex:"-1"},E={class:"header-anchor",href:"#rfr-apiheader"},M=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用: 包含了模块级别头,可以通过修改来动态往UI里面设置值
类型: java.util.LinkedHashMap<String,String>
`)])],-1),V={id:"rfr-currentprojectname",tabindex:"-1"},Z={class:"header-anchor",href:"#rfr-currentprojectname"},F=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用: 当前下拉框选择的项目名
类型: java.lang.String
`)])],-1),K={id:"rfr-currentenvname",tabindex:"-1"},Q={class:"header-anchor",href:"#rfr-currentenvname"},W=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用: 当前下拉框选择的环境名称
类型: java.lang.String
`)])],-1),X={id:"rfr-currentdomain",tabindex:"-1"},Y={class:"header-anchor",href:"#rfr-currentdomain"},$=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用: 当前作用的域名
类型: java.lang.String
`)])],-1),nn={id:"rfr-currentmodulename",tabindex:"-1"},sn={class:"header-anchor",href:"#rfr-currentmodulename"},an=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用: 当前API的模块名
类型: java.lang.String
`)])],-1),tn={id:"rfr-environment",tabindex:"-1"},en={class:"header-anchor",href:"#rfr-environment"},on=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用: 当前环境的变量
类型: java.util.LinkedHashMap<String,String>
`)])],-1),pn=n("h2",{id:"引入第三方-jar",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#引入第三方-jar"},[n("span",null,"引入第三方 Jar")])],-1),cn={class:"hint-container tip"},ln=n("p",{class:"hint-container-title"},"内置的 Jar",-1),un=n("div",{class:"language-text","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`com.alibaba:fastjson:1.2.78
cn.hutool:hutool-all:5.8.5
com.google.guava:guava:30.1.1-jre
`)])],-1),rn=n("p",null,"Jar 的版本会不定期更新,如果发现 bug 请联系作者要求作者升级",-1),dn=n("p",null,"开发者可以利用以上 3 个 Jar 所提供的工具方法,直接在脚本中引用,不需要再依赖第三方的 Jar(hutool 就是香,已经加入许多工具类)",-1),kn=n("a",{href:"#demo"},"Demo",-1),hn={href:"https://www.jetbrains.com/help/idea/auto-completing-code.html",target:"_blank",rel:"noopener noreferrer"},gn=p(`<ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 引入 jar(maven 形式)</label></li></ul><p>下载 jar 可能会需要花费额外的时间</p><div class="language-groovy" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="token annotation punctuation">@Grab</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.apache.commons:commons-lang3:3.12.0&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils

String debug <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//some logic</span>
<span class="token punctuation">}</span>
</code></pre></div><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 引入 jar(通过本地 jar)</label></li></ul><div class="language-groovy" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="token comment">//注意此处的file:前缀</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>classLoader<span class="token punctuation">.</span><span class="token function">addURL</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;file:/path/to/jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> StringUtils <span class="token operator">=</span> Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.apache.commons.lang3.StringUtils&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

String debug <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span><span class="token comment">//获取header</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//some logic</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="作用范围与顺序" tabindex="-1"><a class="header-anchor" href="#作用范围与顺序"><span>作用范围与顺序</span></a></h2>`,6),mn=n("code",null,"项目级别",-1),vn=n("code",null,"单API级别",-1),_n=n("p",null,"项目级别将作用项目中所有的 API，单 API 级别只作用于单个 API。",-1),yn=n("p",null,[s("执行顺序："),n("code",null,"项目级别"),s("->"),n("code",null,"单API级别")],-1),bn=n("p",null,[n("img",{src:m,alt:"scriptScope",loading:"lazy"})],-1),fn={id:"console",tabindex:"-1"},xn={class:"header-anchor",href:"#console"},qn=p(`<p>Console 帮助开发者打印一些你想要的信息</p><div class="language-groovy" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code>console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;info&quot;</span></span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;print info&quot;</span></span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;warn&quot;</span></span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;success&quot;</span></span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;error&quot;</span></span><span class="token punctuation">)</span>

</code></pre></div><p><img src="`+i+'" alt="console" loading="lazy"></p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2>',4),jn={class:"hint-container tip"},wn=n("p",{class:"hint-container-title"},"Code completion支持",-1),Sn={href:"https://www.jetbrains.com/help/idea/auto-completing-code.html",target:"_blank",rel:"noopener noreferrer"},Rn=n("p",null,[n("img",{src:u,alt:"",loading:"lazy"})],-1),Un=n("h3",{id:"_1-签名参数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-签名参数"},[n("span",null,"1. 签名参数")])],-1),Hn=n("p",null,"在你的本地新建一个 xxx.groovy 文件,粘贴以下代码,适当修改后,能保证本地可以正常运行,再把代码粘贴到脚本中",-1),Jn=p(`<p><s>HttpRequest request = HttpUtil.createPost(&quot;http://localhost:8081/book/add&quot;)</s></p><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CharsetUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StrUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>DigestUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpRequest
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpUtil

<span class="token comment">//脚本逻辑正式开始</span>
String body <span class="token operator">=</span> StrUtil<span class="token punctuation">.</span><span class="token function">str</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">bodyBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CharsetUtil<span class="token punctuation">.</span>CHARSET_UTF_8<span class="token punctuation">)</span>
body <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;xxxx&quot;</span></span><span class="token comment">//just for test</span>
String sign <span class="token operator">=</span> DigestUtil<span class="token punctuation">.</span><span class="token function">md5Hex</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;sign&quot;</span></span><span class="token punctuation">,</span>sign<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-利用某一个请求的响应充当请求的-header-参数" tabindex="-1"><a class="header-anchor" href="#_2-利用某一个请求的响应充当请求的-header-参数"><span>2. 利用某一个请求的响应充当请求的 Header 参数</span></a></h3><p>注意获取 token 的逻辑得结合接口返回的数据结构来处理。例如返回</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxxx&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>则需要这么写 <code>JSON.parseObject(myResponse.body()).getJSONObject(&quot;data&quot;).getString(&quot;token&quot;)</code></p><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CharsetUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StrUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>DigestUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpRequest
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpResponse
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpUtil
<span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON

HttpRequest myRequest <span class="token operator">=</span> HttpUtil<span class="token punctuation">.</span><span class="token function">createPost</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;http://localhost:8081/api/v1.0/login&quot;</span></span><span class="token punctuation">)</span>
HttpResponse myResponse <span class="token operator">=</span> myRequest<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>myResponse<span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    String token <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>myResponse<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;token&quot;</span></span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;token&quot;</span></span><span class="token punctuation">,</span>token<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-设置一个environment变量" tabindex="-1"><a class="header-anchor" href="#_3-设置一个environment变量"><span>3. 设置一个Environment变量</span></a></h3><p>假定响应报文格式</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxxx&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在后置脚本中植入以下代码</p><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CharsetUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StrUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>DigestUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpRequest
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpResponse
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpUtil
<span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON

HttpRequest myRequest <span class="token operator">=</span> HttpUtil<span class="token punctuation">.</span><span class="token function">createPost</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;http://localhost:8081/api/v1.0/login&quot;</span></span><span class="token punctuation">)</span>
HttpResponse myResponse <span class="token operator">=</span> myRequest<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>myResponse<span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    String token <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>myResponse<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;data&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;token&quot;</span></span><span class="token punctuation">)</span>
    rfr<span class="token punctuation">.</span>environment<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;token&quot;</span></span><span class="token punctuation">,</span>token<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点"><span>注意点</span></a></h2><ul><li>Groovy 脚本对 <mark>;</mark> 不敏感,Java 用;作为语句代码的结束,Groovy 用换行表示一句代码的结束</li><li>内置变量已被申明,例如 Demo2 中需要额外新建一个请求,变量命名需要注意不能与内置变量相同</li></ul><h2 id="脚本投稿" tabindex="-1"><a class="header-anchor" href="#脚本投稿"><span>脚本投稿 🌟</span></a></h2><p>为了将脚本做的更加强大,评论区开放社区脚本投递,欢迎将强大脚本通过<strong>下方留言</strong> 的形式上报,让更多人使用你开发的脚本</p><ul><li>格式</li></ul><div class="language-groovy" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="token comment">/**
 * 作者:Kings
 * 主页:https://github.com/kings1990
 * 功能:xxxxx
 */</span>

<span class="token comment">//脚本内容</span>
<span class="token punctuation">....</span>
</code></pre></div><p><img src="`+v+'" alt="scriptDonate" loading="lazy"></p>',19);function Cn(Nn,Dn){const e=o("ExternalLinkIcon"),t=o("Badge"),c=o("ColorIcon"),l=o("RouteLink");return d(),k("div",null,[y,n("p",null,[b,s(": "),n("a",f,[s("Groovy"),a(e)])]),x,n("p",null,[n("a",q,[s("https://github.com/kings1990/fast-request-samples"),a(e)])]),j,w,n("p",null,[s("插件底层采用"),n("a",S,[s("hutool"),a(e)]),s("的"),R,s("来实现请求的发送")]),n("h3",U,[n("a",H,[n("span",null,[s("request "),a(t,{text:"2022.2.3️",type:"tip"})])])]),J,C,n("h3",N,[n("a",D,[n("span",null,[s("response "),a(t,{text:"2022.2.3️",type:"tip"})])])]),O,I,n("h3",G,[n("a",L,[n("span",null,[s("rfr "),a(t,{text:"2022.2.3️",type:"tip"})])])]),P,n("h4",T,[n("a",z,[n("span",null,[s("rfr.projectHeader "),a(t,{text:"2022.2.3️",type:"tip"})])])]),A,n("h4",B,[n("a",E,[n("span",null,[s("rfr.apiHeader "),a(t,{text:"2022.2.3️",type:"tip"})])])]),M,n("h4",V,[n("a",Z,[n("span",null,[s("rfr.currentProjectName "),a(t,{text:"2022.2.5️",type:"tip"})])])]),F,n("h4",K,[n("a",Q,[n("span",null,[s("rfr.currentEnvName "),a(t,{text:"2022.2.5️",type:"tip"})])])]),W,n("h4",X,[n("a",Y,[n("span",null,[s("rfr.currentDomain "),a(t,{text:"2022.3.1️",type:"tip"})])])]),$,n("h4",nn,[n("a",sn,[n("span",null,[s("rfr.currentModuleName "),a(t,{text:"2023.1.3️",type:"tip"})])])]),an,n("h4",tn,[n("a",en,[n("span",null,[s("rfr.environment "),a(t,{text:"2023.1.8",type:"tip"})])])]),on,pn,n("div",cn,[ln,un,rn,dn,n("p",null,[s("前往"),kn,s("查看如何获得"),n("a",hn,[s("Code completion"),a(e)]),s("功能")])]),gn,n("p",null,[s("分为"),mn,s("和"),vn,s("，项目全局作用需要点击 "),a(l,{to:"/guide/features/projectValueConfig.html"},{default:h(()=>[a(c,{icon:"quanjucanshu"}),s(" 项目级别全局参数支持")]),_:1}),s(" 进行配置")]),_n,yn,bn,n("h2",fn,[n("a",xn,[n("span",null,[s("Console "),a(t,{text:"2022.2.5",type:"tip"})])])]),qn,n("div",jn,[wn,n("p",null,[s("在项目中加入如下依赖(如果没有),即可在编辑器脚本中处理针对插件核心类的"),n("a",Sn,[s("Code completion"),a(e)]),s("功能(快速导入类(import)、得到方法提示等操作)")]),Rn]),Un,Hn,n("ul",null,[n("li",null,[a(t,{text:"注意最终脚本需要删除这行代码",type:"danger"})])]),Jn])}const Ln=r(_,[["render",Cn],["__file","script.html.vue"]]),Pn=JSON.parse('{"path":"/guide/script.html","title":"脚本","lang":"zh-CN","frontmatter":{"title":"脚本","icon":"code-box-fill","headerDepth":4,"description":"脚本的作用: 开发者可以利用 Groovy 脚本来自定义一些逻辑,从而使得 api 更加灵活,例如对参数进行动态加密签名,放入 header,而不是直接写死 实现技术: Groovy 看到 Groovy 不熟悉请不要慌,语法和 Java 几乎一致(Java 就是香,手动一个狗头) 脚本流程图 测试项目 https://github.com/kings1...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://api-buddy.com/en/guide/script.html"}],["meta",{"property":"og:url","content":"https://api-buddy.com/guide/script.html"}],["meta",{"property":"og:site_name","content":"Fast Request"}],["meta",{"property":"og:title","content":"脚本"}],["meta",{"property":"og:description","content":"脚本的作用: 开发者可以利用 Groovy 脚本来自定义一些逻辑,从而使得 api 更加灵活,例如对参数进行动态加密签名,放入 header,而不是直接写死 实现技术: Groovy 看到 Groovy 不熟悉请不要慌,语法和 Java 几乎一致(Java 就是香,手动一个狗头) 脚本流程图 测试项目 https://github.com/kings1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://api-buddy.com/img/script.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-31T09:24:19.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"脚本"}],["meta",{"property":"article:modified_time","content":"2024-05-31T09:24:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"脚本\\",\\"image\\":[\\"https://api-buddy.com/img/script.svg\\",\\"https://api-buddy.com/img/script.png\\",\\"https://api-buddy.com/img/2022.2.5/console.png\\",\\"https://api-buddy.com/img/2024.1.5/addLibrary.png\\",\\"https://api-buddy.com/img/2022.2.3/scriptDonate.png\\"],\\"dateModified\\":\\"2024-05-31T09:24:19.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"脚本流程图","slug":"脚本流程图","link":"#脚本流程图","children":[]},{"level":2,"title":"测试项目","slug":"测试项目","link":"#测试项目","children":[]},{"level":2,"title":"内置变量","slug":"内置变量","link":"#内置变量","children":[{"level":3,"title":"request","slug":"request","link":"#request","children":[]},{"level":3,"title":"response","slug":"response","link":"#response","children":[]},{"level":3,"title":"rfr","slug":"rfr","link":"#rfr","children":[]}]},{"level":2,"title":"引入第三方 Jar","slug":"引入第三方-jar","link":"#引入第三方-jar","children":[]},{"level":2,"title":"作用范围与顺序","slug":"作用范围与顺序","link":"#作用范围与顺序","children":[]},{"level":2,"title":"Console","slug":"console","link":"#console","children":[]},{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[{"level":3,"title":"1. 签名参数","slug":"_1-签名参数","link":"#_1-签名参数","children":[]},{"level":3,"title":"2. 利用某一个请求的响应充当请求的 Header 参数","slug":"_2-利用某一个请求的响应充当请求的-header-参数","link":"#_2-利用某一个请求的响应充当请求的-header-参数","children":[]},{"level":3,"title":"3. 设置一个Environment变量","slug":"_3-设置一个environment变量","link":"#_3-设置一个environment变量","children":[]}]},{"level":2,"title":"注意点","slug":"注意点","link":"#注意点","children":[]},{"level":2,"title":"脚本投稿 🌟","slug":"脚本投稿","link":"#脚本投稿","children":[]}],"git":{"createdTime":1717147459000,"updatedTime":1717147459000,"contributors":[{"name":"Kings","email":"963987632@qq.com","commits":1}]},"readingTime":{"minutes":4.41,"words":1322},"filePathRelative":"guide/script.md","localizedDate":"2024年5月31日","autoDesc":true}');export{Ln as comp,Pn as data};
