import{_ as c}from"./refreshProjectConfig-nDUALD3E.js";import{_ as p,a as d}from"./transferData-jb4lwMnv.js";import{_ as g,r,o as m,c as h,a as e,d as t,b as o,w as a,e as u}from"./app-io1X_paZ.js";const b="/img/2023.1.3/teamDirectory.png",f={},v=u('<h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>基于版本控制系统，共享<strong>部分配置</strong>以及<strong>API 数据</strong>。</p><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h2><p><span class="vp-badge" style="vertical-align:middle;background:#FE2857;">零部署</span><br><span class="vp-badge" style="vertical-align:middle;background:#087CFA;">私有化</span><br><span class="vp-badge" style="vertical-align:middle;background:#FE2857;">不限人数</span><br><span class="vp-badge" style="vertical-align:middle;background:#FC801D;">不限 API 数</span><br><span class="vp-badge" style="vertical-align:middle;background:#6B57FF;">不限项目数</span><br><span class="vp-badge" style="vertical-align:middle;background:#3DEA62;">不限功能</span><br><span class="vp-badge" style="vertical-align:middle;background:#FDB60D;">离线运转</span><br><span class="vp-badge" style="vertical-align:middle;background:#21D789;">安全</span><br></p><h2 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用"><span>如何使用</span></a></h2><p>基于原理，所以当我们需要共享或者拉取别人的配置或者 API 时，假设我们利用 Git 作为我们的版本控制系统，我们只需要<strong>push</strong>即可共享配置和 API 数据，<strong>pull</strong>即可获取别人提交的配置和 API 数据。</p><h3 id="更新配置" tabindex="-1"><a class="header-anchor" href="#更新配置"><span>更新配置</span></a></h3><p>版本控制系统 pull 后，例如<code>Git pull</code>，点击刷新项目配置按钮，即可获取其他成员提交的配置</p><p><img src="'+c+'" alt="refreshProjectConfig" loading="lazy"></p><h2 id="更新-api" tabindex="-1"><a class="header-anchor" href="#更新-api"><span>更新 API</span></a></h2><p>版本控制系统 pull 后，例如<code>Git pull</code>，点击 API 刷新按钮，即可获取其他成员提交的 API</p><p><img src="'+p+'" alt="refreshProjectConfig" loading="lazy"></p><h2 id="本地文件存储结构" tabindex="-1"><a class="header-anchor" href="#本地文件存储结构"><span>本地文件存储结构</span></a></h2><p>插件会默认在项目根目录下创建一个 <strong>.fastRequest</strong> 的目录，API 存储在 <strong>collections</strong> 目录下，配置存储在 <strong>config</strong> 目录下，API 按照 <code>模块-&gt;类名-&gt;API</code> 的结构进行存储，每一个目录下存放一个 <strong>directory.json</strong> 文件，用于标识该目录。 其他 API 用方法的<strong>方法名.rapi</strong>进行存储，该文件可能会在版本控制系统中因为多方修改产生冲突，最终需要用户解决冲突，并满足标准的 json 以及数据结构。</p><p><img src="'+b+'" alt="teamDirectory" loading="lazy"></p><h2 id="历史数据转移" tabindex="-1"><a class="header-anchor" href="#历史数据转移"><span>历史数据转移</span></a></h2><p>插件默认会进行一次历史数据转移，数据转移的时候(版本&lt;=2023.1.3 的数据)，如果你的数据在<strong>版本管理系统</strong>上未提交，则不需要关心历史数据。 如果版本管理系统其他人已提交 API，则会进行覆盖。 注意如果想看 API 历史数据，可以结合<strong>版本控制系统</strong>的文件<strong>历史记录</strong>来还原，也可以结合<strong>本地文件历史记录</strong>来还原。</p><p>如果发现数据未转移，也可手动操作！</p><p><img src="'+d+'" alt="transferData" loading="lazy"></p><h2 id="文件权限" tabindex="-1"><a class="header-anchor" href="#文件权限"><span>文件权限</span></a></h2><p>如果发现因为<code>Permission denied</code>导致的错误，执行以下指令</p>',21),_=e("div",{class:"language-bash","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),t(),e("span",{class:"token punctuation"},"["),t("current project root dir"),e("span",{class:"token punctuation"},"]"),t(`
`),e("span",{class:"token function"},"chmod"),t(),e("span",{class:"token parameter variable"},"-R"),t(),e("span",{class:"token number"},"777"),t(` .fastRequest/*
`)])])],-1),y=e("div",{class:"language-bash","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),t(),e("span",{class:"token punctuation"},"["),t("current project root dir"),e("span",{class:"token punctuation"},"]"),t(`
takeown /f /r /d n .fastRequest/*
`)])])],-1);function k(A,P){const i=r("Badge"),l=r("CodeTabs");return m(),h("div",null,[e("p",null,[t("版本要求: "),o(i,{text:"2023.1.3"})]),v,o(l,{id:"66",data:[{id:"Linux"},{id:"Windows"}],"tab-id":"shell"},{title0:a(({value:n,isActive:s})=>[t("Linux")]),title1:a(({value:n,isActive:s})=>[t("Windows")]),tab0:a(({value:n,isActive:s})=>[_]),tab1:a(({value:n,isActive:s})=>[y]),_:1})])}const C=g(f,[["render",k],["__file","teamwork.html.vue"]]),D=JSON.parse('{"path":"/guide/teamwork.html","title":"团队协作","lang":"zh-CN","frontmatter":{"title":"团队协作","icon":"teamwork","description":"版本要求: 原理 基于版本控制系统，共享部分配置以及API 数据。 特性 零部署 私有化 不限人数 不限 API 数 不限项目数 不限功能 离线运转 安全 如何使用 基于原理，所以当我们需要共享或者拉取别人的配置或者 API 时，假设我们利用 Git 作为我们的版本控制系统，我们只需要push即可共享配置和 API 数据，pull即可获取别人提交的配置...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://api-buddy.com/en/guide/teamwork.html"}],["meta",{"property":"og:url","content":"https://api-buddy.com/guide/teamwork.html"}],["meta",{"property":"og:site_name","content":"Fast Request"}],["meta",{"property":"og:title","content":"团队协作"}],["meta",{"property":"og:description","content":"版本要求: 原理 基于版本控制系统，共享部分配置以及API 数据。 特性 零部署 私有化 不限人数 不限 API 数 不限项目数 不限功能 离线运转 安全 如何使用 基于原理，所以当我们需要共享或者拉取别人的配置或者 API 时，假设我们利用 Git 作为我们的版本控制系统，我们只需要push即可共享配置和 API 数据，pull即可获取别人提交的配置..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://api-buddy.com/img/2023.1.3/refreshProjectConfig.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-31T09:24:19.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"团队协作"}],["meta",{"property":"article:modified_time","content":"2024-05-31T09:24:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"团队协作\\",\\"image\\":[\\"https://api-buddy.com/img/2023.1.3/refreshProjectConfig.png\\",\\"https://api-buddy.com/img/2023.1.3/refreshAPI.png\\",\\"https://api-buddy.com/img/2023.1.3/teamDirectory.png\\",\\"https://api-buddy.com/img/2023.1.3/transferData.png\\"],\\"dateModified\\":\\"2024-05-31T09:24:19.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"特性","slug":"特性","link":"#特性","children":[]},{"level":2,"title":"如何使用","slug":"如何使用","link":"#如何使用","children":[{"level":3,"title":"更新配置","slug":"更新配置","link":"#更新配置","children":[]}]},{"level":2,"title":"更新 API","slug":"更新-api","link":"#更新-api","children":[]},{"level":2,"title":"本地文件存储结构","slug":"本地文件存储结构","link":"#本地文件存储结构","children":[]},{"level":2,"title":"历史数据转移","slug":"历史数据转移","link":"#历史数据转移","children":[]},{"level":2,"title":"文件权限","slug":"文件权限","link":"#文件权限","children":[]}],"git":{"createdTime":1717147459000,"updatedTime":1717147459000,"contributors":[{"name":"Kings","email":"963987632@qq.com","commits":1}]},"readingTime":{"minutes":2.21,"words":662},"filePathRelative":"guide/teamwork.md","localizedDate":"2024年5月31日","autoDesc":true}');export{C as comp,D as data};
